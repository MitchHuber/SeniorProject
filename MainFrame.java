/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.gui;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author mitch
 */ 
public class MainFrame extends javax.swing.JFrame {
    static int DAYTIME_PORT = 2001;
    int index = 0;
    int progress = 0;
    
    /**
     * Creates new form UI
     */
    public MainFrame() {
        initComponents();
        mainPanel.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parentPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        loginBtn = new javax.swing.JButton();
        registerBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        usernameTf = new javax.swing.JTextField();
        passwordTf = new javax.swing.JTextField();
        Title = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        categoryText = new javax.swing.JTextField();
        removeCategoryBtn = new javax.swing.JButton();
        addCategoryBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        itemText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        addItemBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        monthlyIncomeText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        savingsText = new javax.swing.JTextField();
        setBudgetBtn = new javax.swing.JButton();
        logoffBtn = new javax.swing.JButton();
        rmvItemBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        jLabel11 = new javax.swing.JLabel();
        personalGoalText = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        parentPanel.setLayout(new javax.swing.OverlayLayout(parentPanel));

        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Password:");

        jLabel1.setText("Username:");

        Title.setText("Easy Budget");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usernameTf))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordTf)
                            .addGroup(loginPanelLayout.createSequentialGroup()
                                .addComponent(registerBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                                .addComponent(loginBtn)
                                .addGap(124, 124, 124)))))
                .addContainerGap())
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(Title)
                .addGap(36, 36, 36)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usernameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerBtn)
                    .addComponent(loginBtn))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        parentPanel.add(loginPanel);

        jLabel3.setText("EBudget");

        jLabel4.setText("Add/Remove Categories");

        jLabel5.setText("Category Title: ");

        removeCategoryBtn.setText("Remove");
        removeCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCategoryBtnActionPerformed(evt);
            }
        });

        addCategoryBtn.setText("Add");
        addCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Add items & Prices");

        jLabel7.setText("Item:");

        jLabel8.setText("Price:");

        addItemBtn.setText("Add item ");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });

        jLabel9.setText("Monthly Income:");

        jLabel10.setText("Spending Goal:");

        setBudgetBtn.setText("Set Budget");
        setBudgetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBudgetBtnActionPerformed(evt);
            }
        });

        logoffBtn.setText("Logout");
        logoffBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoffBtnActionPerformed(evt);
            }
        });

        rmvItemBtn.setText("Remove item");
        rmvItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvItemBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoryText))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(logoffBtn))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(setBudgetBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(savingsText))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addCategoryBtn)
                                .addGap(27, 27, 27))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemText, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(priceText))
                            .addComponent(removeCategoryBtn, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addItemBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(monthlyIncomeText)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rmvItemBtn)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeCategoryBtn)
                    .addComponent(addCategoryBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(itemText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addItemBtn)
                    .addComponent(rmvItemBtn))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(monthlyIncomeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(savingsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setBudgetBtn)
                    .addComponent(logoffBtn))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel11.setText("Personal goal:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(personalGoalText, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(personalGoalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 70, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        parentPanel.add(mainPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(parentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(parentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        String username = usernameTf.getText();
        String password = passwordTf.getText();
        
        try {
            String host = "127.0.0.1";


            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("REG");
            String response = in.readLine();

            if(response.equals("OK")){
               out.println(username);
               out.println(password);
               String error = in.readLine();
               if(error.equals("1"))
                   JOptionPane.showMessageDialog(this, "You need to create a password");
               else if(error.equals("2"))
                   JOptionPane.showMessageDialog(this, "That username is already taken");
               else{
                   JOptionPane.showMessageDialog(this, username + " is now registered.");  
               }
            }
        }
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        String username = usernameTf.getText();
        String password = passwordTf.getText();
        
        try {
            String host = "127.0.0.1";


            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("LOGIN");
            String response = in.readLine();
            
            if(response.equals("OK")){
                out.println(username);
                out.println(password);
                String check = in.readLine();
                if(check.equals("1")){
                    JOptionPane.showMessageDialog(this, "That username is not "
                            + "registered yet.");
                }
                else if(check.equals("2")){
                    JOptionPane.showMessageDialog(this, "The password/username combination"
                            + "is incorrect.");
                }
                else if(check.equals("3")){
                    JOptionPane.showMessageDialog(this, "That user is already logged on");
                }
                else{
                    String categories = in.readLine();
                    int totalCats = Integer.parseInt(categories);
                    System.out.println("The amount of categories are " + totalCats);
                    if(totalCats == 0){
                        loginPanel.setVisible(false);
                        mainPanel.setVisible(true);
                    }
                    else{
                        for(int i = 0; i < totalCats; i++){
                            String category = in.readLine(); 
                            System.out.println("The category is " + category);
                            JTextArea textArea = new JTextArea();
                            jTabbedPane1.add(category , textArea);
                            Component ta = jTabbedPane1.getComponentAt(i);
                            if(ta instanceof JTextArea){
                                String items = in.readLine();
                                int totalItems = Integer.parseInt(items);
                                for(int j = 0; j < totalItems; j++){
                                    String item = in.readLine();
                                    String price = in.readLine();
                                    ((JTextArea) ta).append(item + " " + "$" + price + "\n");
                                }
                            }
                        } 
                        loginPanel.setVisible(false);
                        mainPanel.setVisible(true);
                    }
                }
            }
        }
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void addCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryBtnActionPerformed
        String title = categoryText.getText().trim();
        
        try{
            String host = "127.0.0.1";

            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("ADDCAT");
            String response = in.readLine();
            if(response.equals("OK")){   
                out.println(usernameTf.getText());
                if(categoryText.getText().isBlank()){
                    JOptionPane.showMessageDialog(this, "You must have a category title.");
                    String check = "NO";
                    out.println(check);
                }
                else{
                    JTextArea textArea = new JTextArea();
                    textArea.setEditable(false);
                    title = title.substring(0, 1).toUpperCase() + title.substring(1);
                    out.println(title);
                    String check = in.readLine();
                    if(check.equals("1")){
                        JOptionPane.showMessageDialog(this, "You already have a "
                                + "category with this title.");
                    }
                    else{
                        jTabbedPane1.add(title, textArea);
                        jTabbedPane1.setComponentAt(index, textArea);
                        categoryText.setText("");
                        index++; 
                    }
                }
            }
        }
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }
    }//GEN-LAST:event_addCategoryBtnActionPerformed

    private void logoffBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoffBtnActionPerformed
               String username = usernameTf.getText();
        
        try{
            String host = "127.0.0.1";

            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("LOGOFF");
            String response = in.readLine();
            if(response.equals("OK")){
                out.println(username); 
                String categories = in.readLine();
                int totalCats = Integer.parseInt(categories);      
                for(int i = 0; i < totalCats; i++){
                    Component ta = jTabbedPane1.getComponentAt(i);
                    if(ta instanceof JTextArea){
                        int totalItems = ((JTextArea) ta).getLineCount() - 1;
                        out.println(Integer.toString(totalItems));
                    }
                }
                mainPanel.setVisible(false);
                usernameTf.setText("");
                passwordTf.setText("");
                loginPanel.setVisible(true);
                jTabbedPane1.removeAll();
            }
            
        }
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }
    }//GEN-LAST:event_logoffBtnActionPerformed

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        String item = itemText.getText();
        String price = priceText.getText();
        Component comp = jTabbedPane1.getSelectedComponent();
        
        try {
            String host = "127.0.0.1";

            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("ADDITEM");                    
            String response = in.readLine();
            if(response.equals("OK")){
                if(jTabbedPane1.getTabCount() == 0){
                    out.println("BLANK");
                    JOptionPane.showMessageDialog(this, "You must add a category first.");
                }
                else if(item.isEmpty() || price.isEmpty()){
                    out.println("NO");
                    JOptionPane.showMessageDialog(this, "You must fill out both "
                                + "the item field and the price field");
                }
                else if(item.matches(".*\\d.*") == true){
                    out.println("NUMS");
                    JOptionPane.showMessageDialog(this, "Only letters are allowed in the item field");
                }
                else if(price.matches("^[a-zA-Z]*$") == true){
                    out.println("CHARS");
                    JOptionPane.showMessageDialog(this, "Only numbers are allowed in the price field");
                }
                else{
                    String check = "YES";
                    out.println(check);
                    out.println(usernameTf.getText());
                    out.println(item);
                    out.println(price);
                    
                    //Selects proper textArea to append to 
                    if(comp instanceof JTextArea){
                        ((JTextArea) comp).append(item + " " + "$" + price + "\n");
                        itemText.setText("");
                        priceText.setText("");
                    }
                    if(progress <= progressBar.getMaximum()){
                        progress += Integer.parseInt(price);
                        progressBar.setValue(progress);
                    }
                    else{
                        progress = progressBar.getMaximum();
                        progressBar.setValue(progress);
                    }
                }
            }
        }
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void removeCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCategoryBtnActionPerformed
        String category = categoryText.getText();
        String username = usernameTf.getText();
        
        try {
            String host = "127.0.0.1";

            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("REMOVECAT");
            String response = in.readLine();
            if(response.equals("OK")){
                if(jTabbedPane1.getTabCount() == 0){
                    JOptionPane.showMessageDialog(this, "You must add a category first.");
                    out.println("EMPTY");
                }
                else if(categoryText.getText().isBlank()){
                    JOptionPane.showMessageDialog(this, "You have to write a category title");
                    out.println("BLANK");
                }
                else if(jTabbedPane1.getTabCount() >= 1){
                    out.println("OK");
                    out.println(username);
                    out.println(category);
                     String i = in.readLine();
                    if(i.equals("NO")){
                        JOptionPane.showMessageDialog(this, "There is no category with that title.");
                    }
                    else{
                        int spot = Integer.parseInt(i);
                        jTabbedPane1.remove(spot);
                        categoryText.setText("");
                        index--;
                    }
                }
            }
        }
            
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }
    }//GEN-LAST:event_removeCategoryBtnActionPerformed

    private void setBudgetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setBudgetBtnActionPerformed
        String monthlyIncome = monthlyIncomeText.getText();
        String spendingGoal = savingsText.getText();
        String username = usernameTf.getText();
        
        try {
            String host = "127.0.0.1";

            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("SETBUDGET");
            String check = in.readLine();
            if(check.equals("OK")){
                out.println(username);
                out.println(monthlyIncome);
                out.println(spendingGoal);
                progressBar.setMaximum(Integer.parseInt(spendingGoal));
                progressBar.setStringPainted(true);
                monthlyIncomeText.setText("");
                savingsText.setText("");
            }
        }
            
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }

    }//GEN-LAST:event_setBudgetBtnActionPerformed

    private void rmvItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvItemBtnActionPerformed
        String username = usernameTf.getText();
        String item = itemText.getText();
        String price = priceText.getText();
        
        try {
            String host = "127.0.0.1";

            Socket sock = new Socket( host, DAYTIME_PORT );

            BufferedReader in =
                new BufferedReader(
                    new InputStreamReader( sock.getInputStream() ) );

            PrintWriter out =
            new PrintWriter( sock.getOutputStream(), true );
            
            out.println("REMOVEITEM");  
            String check = in.readLine();
            if(check.equals("OK")){
                out.println(username);
                out.println(item);
                out.println(price);
                for(int i = 0; i < jTabbedPane1.getComponentCount(); i++){
                    Component comp = jTabbedPane1.getComponentAt(i);
                    if(comp instanceof JTextArea){
                     //System.out.print("HEY " + ((JTextArea) comp).getComponent(0));
                        String content = ((JTextArea) comp).getText();
                        System.out.println(content);
                        /*for(int j = 0; j < ((JTextArea) comp).getComponentCount(); j++){
                            System.out.print("HEY " + ((JTextArea) comp).getComponent(j));
                            //if(content.equals(price) && content.equals(price)){
                            //}
                        }*/
                    }               
                }
            }
        }
        catch ( IOException e ) {
            System.err.println("IOEXCEPTION");
            System.err.println( e.getMessage() );
        }
    }//GEN-LAST:event_rmvItemBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton addCategoryBtn;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JTextField categoryText;
    private javax.swing.JTextField itemText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton logoffBtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField monthlyIncomeText;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JTextField passwordTf;
    private javax.swing.JTextField personalGoalText;
    private javax.swing.JTextField priceText;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton removeCategoryBtn;
    private javax.swing.JButton rmvItemBtn;
    private javax.swing.JTextField savingsText;
    private javax.swing.JButton setBudgetBtn;
    public static javax.swing.JTextField usernameTf;
    // End of variables declaration//GEN-END:variables
}
